{"version":3,"sources":["components/ProductPage/ProductPage.module.css","components/cart/CartProduct/CartProduct.module.css","components/shared/Button/Button.module.css","components/cart/CartOverlay/CartOverlay.module.css","components/Product/Product.module.css","components/HeaderBar/HeaderBar.module.css","components/cart/CartProduct/CartProductActions/CartProductActions.module.css","components/CurrencyDropDown/CurrencyDropDown.module.css","components/shared/Circle/Circle.module.css","components/cart/CartPage/CartPage.module.css","components/ProductList/ProductList.module.css","Icons/ProductCard.svg","components/shared/utils/getPriceWithCurrentCurrency.js","components/Product/Product.js","GraphQL/queries.js","components/ProductList/ProductList.js","Icons/Logo.svg","Icons/ArrowDown.svg","Icons/ArrowUp.svg","components/CurrencyDropDown/CurrencyDropDown.js","components/shared/DetectClickOutside/DetectClickOutside.js","Icons/EmptyCart.svg","components/shared/Button/Button.js","components/shared/Circle/Circle.js","Icons/Plus.svg","Icons/Minus.svg","Icons/ChevronRight.svg","Icons/ChevronLeft.svg","components/cart/CartProduct/CartProductActions/CartProductActions.js","components/cart/CartProduct/CartProduct.js","components/shared/utils/getTotalProductsPriceAmount.js","components/cart/CartOverlay/utils/getTotalProductsQuantity.js","components/cart/CartOverlay/CartOverlay.js","components/shared/CategoriesNames/CategoriesNames.js","components/HeaderBar/HeaderBar.js","components/ProductPage/ProductPage.js","components/cart/CartPage/CartPage.js","App.js","components/shared/utils/getCurrencySymbol.js","GraphQL/client.js","index.js"],"names":["module","exports","getPriceWithCurrentCurrency","prices","currentCurrency","filter","price","currency","amount","toFixed","Product","addProductToCartHandler","props","cart","find","product","id","alert","setCart","gallery","quantity","renderOutOfStockLabel","inStock","className","styles","notInStock","renderProductCard","attributes","category","to","src","ProductCard","alt","onClick","this","name","productWrapper","classnames","notInStockBox","productImage","symbolCurrency","productCard","React","PureComponent","getCurrencies","gql","getCategoriesNames","getProduct","getCategoryProducts","ProductList","renderProducts","products","map","handleCurrentCategoryName","categoryName","productList","Query","query","variables","title","loading","data","Component","CurrencyDropDown","renderCurrencies","onCurrencyClick","setShowMenu","detect","currencies","dropDownMenuItem","role","type","e","currentTarget","renderMenu","dropDownMenu","ref","nodeRef","setArrowIcon","showMenu","ArrowUp","ArrowDown","triggerRef","dropDownContainer","aria-pressed","tabIndex","aria-hidden","dropDownTriggerer","DetectClickOutside","handleClickOutside","current","contains","target","setState","state","createRef","document","addEventListener","removeEventListener","render","Button","btnClasses","btn","btnPrimary","variant","btnSecondary","btnMini","size","btnSmall","btnMedium","btnLarge","btnFullWidth","miniBtnSelected","isSelected","mediumBtnSelected","renderButtonContent","isIcon","children","iconClasses","iconMini","iconSmall","stylesProps","buttonType","style","Circle","circleClasses","circle","swatchMini","swatchMedium","color","backgroundColor","CartProductActions","productImageClasses","ImageCartPage","ImageCartMini","gallerySwitcher","galleryLength","length","galleryCount","prev","productCount","AddOrRemoveQuantity","quantityBtnSize","handleAddProductQuantity","Plus","handleRemoveProductQuantity","Minus","productImageContainer","productImageSwitcher","ChevronLeft","ChevronRight","CartProduct","cartProductClassNames","productBrandClasses","brandCartPage","brandCartMini","productNameClasses","nameCartPage","nameCartMini","productPriceClasses","priceCartPage","priceCartMini","attributeNameClasses","attributeNameCartPage","attributeNameMini","renderAttributes","attribute","index","attributeName","item","attributeType","selectedItem","value","pointerEvents","attributeId","brand","productInfo","productAttributes","getTotalProductsPriceAmount","cartProducts","reduce","acc","productTotal","getTotalProductsQuantity","curr","CartOverlay","renderMenuProducts","divider","layer","cartOverlayHeader","cartOverlayProducts","cartOverlayTotalPrice","cartOverlayButtons","body","overflow","EmptyCart","totalQuantityBadge","CategoriesNames","categories","HeaderBar","headerBarWrapper","navCategories","activeClassName","navLinks","toUpperCase","logo","Logo","cartContainer","ProductPage","handleAttributesItems","rest","productCart","handleAddingToCard","securedProductId","sort","a","b","match","params","productId","ProductIsAlreadyInCart","globalCart","undefined","setToGlobalCart","renderProductImages","image","smallImage","selectedImagePreview","renderOutOfStock","isImagePreviewSelected","isTypeSwatch","renderAttributeItems","items","onChange","htmlFor","renderProductAttributes","attributesContainer","itemsContainer","error","description","pageContainer","galleryContainer","previewImages","largeImage","priceHeader","priceAmount","dangerouslySetInnerHTML","__html","sanitize","CartPage","cartPageWrapper","cartPageHeader","App","setCurrency","clickedCurrency","addedToCart","addedProduct","decreasedProduct","removedProduct","path","exact","component","errorLink","onError","graphqlErrors","networkError","forEach","message","locations","console","log","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","ReactDOM","StrictMode","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.819375ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"ProductPage_pageContainer__1vrzg\",\"galleryContainer\":\"ProductPage_galleryContainer__OUK08\",\"previewImages\":\"ProductPage_previewImages__2V8DS\",\"smallImage\":\"ProductPage_smallImage__Mjn_7\",\"notInStockBox\":\"ProductPage_notInStockBox__2Fi15\",\"notInStock\":\"ProductPage_notInStock__226eD\",\"largeImage\":\"ProductPage_largeImage__1KUv8\",\"productInfo\":\"ProductPage_productInfo__2m-U3\",\"attribute\":\"ProductPage_attribute__3fTuk\",\"price\":\"ProductPage_price__3fuPV\",\"priceHeader\":\"ProductPage_priceHeader__2Z8sh\",\"itemsContainer\":\"ProductPage_itemsContainer__-NMyU\",\"priceAmount\":\"ProductPage_priceAmount__3N5p4\",\"description\":\"ProductPage_description__3Kjtw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"CartProduct_product__3VyRd\",\"brandCartPage\":\"CartProduct_brandCartPage__2SetO\",\"brandCartMini\":\"CartProduct_brandCartMini__fBOem\",\"nameCartPage\":\"CartProduct_nameCartPage__26ovS\",\"nameCartMini\":\"CartProduct_nameCartMini__11tAw\",\"priceCartPage\":\"CartProduct_priceCartPage__3zjqP\",\"priceCartMini\":\"CartProduct_priceCartMini__1xhjr\",\"attributeNameCartPage\":\"CartProduct_attributeNameCartPage__1HAoM\",\"attributeNameMini\":\"CartProduct_attributeNameMini__2Bf0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__141Ol\",\"btnPrimary\":\"Button_btnPrimary__OerI4\",\"btnSecondary\":\"Button_btnSecondary__2tUd9\",\"btnMini\":\"Button_btnMini__2Jr9x\",\"btnSmall\":\"Button_btnSmall__3h1Rq\",\"iconMini\":\"Button_iconMini__1St3S\",\"iconSmall\":\"Button_iconSmall__DxVVR\",\"btnMedium\":\"Button_btnMedium__2eNw3\",\"btnLarge\":\"Button_btnLarge__2adxu\",\"btnFullWidth\":\"Button_btnFullWidth__eJk7V\",\"miniBtnSelected\":\"Button_miniBtnSelected__1_6mE\",\"mediumBtnSelected\":\"Button_mediumBtnSelected__3Atln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDownContainer\":\"CartOverlay_dropDownContainer__1wnd8\",\"dropDownTriggerer\":\"CartOverlay_dropDownTriggerer__3DDWf\",\"layer\":\"CartOverlay_layer__3dDy7\",\"dropDownMenu\":\"CartOverlay_dropDownMenu__1xoiU\",\"cartOverlayHeader\":\"CartOverlay_cartOverlayHeader__2_wt7\",\"cartOverlayTotalPrice\":\"CartOverlay_cartOverlayTotalPrice__2z9fk\",\"cartOverlayButtons\":\"CartOverlay_cartOverlayButtons__pEWwh\",\"totalQuantityBadge\":\"CartOverlay_totalQuantityBadge__JlybW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productWrapper\":\"Product_productWrapper__22SzW\",\"product\":\"Product_product__2xg30\",\"productImage\":\"Product_productImage__3y-tI\",\"notInStockBox\":\"Product_notInStockBox__2vYr5\",\"notInStock\":\"Product_notInStock__3rP7I\",\"name\":\"Product_name__3qIAJ\",\"price\":\"Product_price__1FR95\",\"productCard\":\"Product_productCard__3TVZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBarWrapper\":\"HeaderBar_headerBarWrapper__zo1U4\",\"navCategories\":\"HeaderBar_navCategories__3AXHv\",\"logo\":\"HeaderBar_logo__1mR9E\",\"cartContainer\":\"HeaderBar_cartContainer__3jaG0\",\"cart\":\"HeaderBar_cart__2s0iR\",\"navLinks\":\"HeaderBar_navLinks__3-tTY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productCount\":\"CartProductActions_productCount__3rnhs\",\"AddOrRemoveQuantity\":\"CartProductActions_AddOrRemoveQuantity__14SJC\",\"productImageContainer\":\"CartProductActions_productImageContainer__1Kwjj\",\"productImageSwitcher\":\"CartProductActions_productImageSwitcher__2p_Wi\",\"productImage\":\"CartProductActions_productImage__38iBZ\",\"ImageCartPage\":\"CartProductActions_ImageCartPage__P6IFe\",\"ImageCartMini\":\"CartProductActions_ImageCartMini__IUn5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDownContainer\":\"CurrencyDropDown_dropDownContainer__1iSGZ\",\"dropDownTriggerer\":\"CurrencyDropDown_dropDownTriggerer__3JQ8W\",\"dropDownMenu\":\"CurrencyDropDown_dropDownMenu__1sqD-\",\"dropDownMenuItem\":\"CurrencyDropDown_dropDownMenuItem__z7gsp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__2pLdd\",\"swatchMini\":\"Circle_swatchMini__43EjG\",\"swatchMedium\":\"Circle_swatchMedium__2lm9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartPageWrapper\":\"CartPage_cartPageWrapper__vlMA7\",\"cartPageHeader\":\"CartPage_cartPageHeader__27_3_\",\"divider\":\"CartPage_divider__3Nl--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productList\":\"ProductList_productList__fUkus\",\"categoryName\":\"ProductList_categoryName__2VaLt\"};","export default __webpack_public_path__ + \"static/media/ProductCard.a4e9444e.svg\";","export const getPriceWithCurrentCurrency = (prices, currentCurrency) => {\r\n  return prices\r\n    .filter((price) => price.currency === currentCurrency)[0]\r\n    .amount.toFixed(2);\r\n};\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./Product.module.css\";\r\nimport ProductCard from \"../../Icons/ProductCard.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPriceWithCurrentCurrency } from \"../shared/utils/getPriceWithCurrentCurrency\";\r\n\r\nclass Product extends React.PureComponent {\r\n  addProductToCartHandler = () => {\r\n    const isAlreadyInCart = this.props.cart.find(\r\n      (product) => product.id === this.props.product.id\r\n    );\r\n    if (isAlreadyInCart) {\r\n      alert(\"This Product Is Already In The Cart\");\r\n    } else {\r\n      this.props.setCart({\r\n        ...this.props.product,\r\n        gallery: this.props.product.gallery,\r\n        quantity: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  renderOutOfStockLabel = (inStock) => {\r\n    return (\r\n      !inStock && (\r\n        <div className={styles.notInStock}>\r\n          <span>OUT OF STOCK</span>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  renderProductCard = () => {\r\n    const { attributes, id, inStock, category } = this.props.product;\r\n    return attributes[0] ? (\r\n      <Link to={`/${category}/${id}`}>\r\n        <img src={ProductCard} alt=\"product cart\" />\r\n      </Link>\r\n    ) : !inStock ? (\r\n      <Link to={`/${category}/${id}`}>\r\n        <img src={ProductCard} alt=\"product cart\" />\r\n      </Link>\r\n    ) : (\r\n      <img\r\n        onClick={this.addProductToCartHandler}\r\n        src={ProductCard}\r\n        alt=\"product cart\"\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    const { name, gallery, id, prices, inStock, category } = this.props.product;\r\n    return (\r\n      <div className={styles.productWrapper}>\r\n        <Link to={`/${category}/${id}`}>\r\n          {this.renderOutOfStockLabel(inStock)}\r\n          <div\r\n            className={classnames(styles.product, {\r\n              [styles.notInStockBox]: !inStock,\r\n            })}\r\n          >\r\n            <img className={styles.productImage} src={gallery[0]} alt={name} />\r\n            <p className={styles.name}>{name}</p>\r\n\r\n            <p className={styles.price}>\r\n              {`${\r\n                this.props.currency.symbolCurrency\r\n              }${getPriceWithCurrentCurrency(\r\n                prices,\r\n                this.props.currency.currentCurrency\r\n              )}`}\r\n            </p>\r\n          </div>\r\n        </Link>\r\n        <div className={styles.productCard}>{this.renderProductCard()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const getCurrencies = gql`\r\n  query {\r\n    currencies\r\n  }\r\n`;\r\n\r\nexport const getCategoriesNames = gql`\r\n  query {\r\n    categories {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getProduct = gql`\r\n  query product($id: String!) {\r\n    product(id: $id) {\r\n      id\r\n      name\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        name\r\n        type\r\n        items {\r\n          displayValue\r\n          value\r\n          id\r\n        }\r\n      }\r\n      prices {\r\n        currency\r\n        amount\r\n      }\r\n      brand\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getCategoryProducts = gql`\r\n  query category($title: String!) {\r\n    category(input: { title: $title }) {\r\n      name\r\n      products {\r\n        id\r\n        name\r\n        inStock\r\n        gallery\r\n        category\r\n        attributes {\r\n          id\r\n          name\r\n          type\r\n        }\r\n        prices {\r\n          currency\r\n          amount\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Product from \"../Product/Product\";\r\nimport styles from \"./ProductList.module.css\";\r\nimport { Query } from \"@apollo/client/react/components\";\r\nimport { getCategoryProducts } from \"../../GraphQL/queries\";\r\n\r\nclass ProductList extends React.Component {\r\n  renderProducts = (products) => {\r\n    return products.map((product) => {\r\n      return (\r\n        <Product\r\n          key={product.id}\r\n          product={product}\r\n          currency={this.props.currency}\r\n          setCart={this.props.setCart}\r\n          cart={this.props.cart}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  handleCurrentCategoryName = () => {\r\n    return this.props.categoryName === \"\" ? \"All\" : this.props.categoryName;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.categoryName}>\r\n          <h1>{this.handleCurrentCategoryName()}</h1>\r\n        </div>\r\n        <div className={styles.productList}>\r\n          <Query\r\n            query={getCategoryProducts}\r\n            variables={{ title: this.props.categoryName }}\r\n          >\r\n            {({ loading, data }) => {\r\n              if (loading) return \"loading..\";\r\n              return this.renderProducts(data.category.products);\r\n            }}\r\n          </Query>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProductList;\r\n","export default __webpack_public_path__ + \"static/media/Logo.18e336cb.svg\";","export default __webpack_public_path__ + \"static/media/ArrowDown.90b7f083.svg\";","export default __webpack_public_path__ + \"static/media/ArrowUp.a4f25be7.svg\";","import React from \"react\";\r\nimport styles from \"./CurrencyDropDown.module.css\";\r\nimport ArrowDown from \"../../Icons/ArrowDown.svg\";\r\nimport ArrowUp from \"../../Icons/ArrowUp.svg\";\r\nimport { getCurrencies } from \"../../GraphQL/queries\";\r\nimport { Query } from \"@apollo/client/react/components\";\r\n\r\nclass CurrencyDropDown extends React.PureComponent {\r\n  renderCurrencies = (data) => {\r\n    const {\r\n      onCurrencyClick,\r\n      detect: { setShowMenu },\r\n    } = this.props;\r\n    return data.currencies.map((currency) => {\r\n      return (\r\n        <button\r\n          className={styles.dropDownMenuItem}\r\n          role=\"menuitem\"\r\n          type=\"button\"\r\n          key={currency}\r\n          id={currency}\r\n          onClick={(e) => {\r\n            onCurrencyClick(e.currentTarget.id);\r\n            setShowMenu();\r\n          }}\r\n        >\r\n          {currency}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  renderMenu = () => {\r\n    return (\r\n      <div\r\n        role=\"menu\"\r\n        className={styles.dropDownMenu}\r\n        ref={this.props.detect.nodeRef}\r\n      >\r\n        <Query query={getCurrencies}>\r\n          {({ loading, data }) => {\r\n            if (loading) return \"loading..\";\r\n            return this.renderCurrencies(data);\r\n          }}\r\n        </Query>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  setArrowIcon = () => {\r\n    return this.props.detect.showMenu ? ArrowUp : ArrowDown;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currency: { symbolCurrency },\r\n      detect: { triggerRef, showMenu },\r\n    } = this.props;\r\n    return (\r\n      <div className={styles.dropDownContainer}>\r\n        <div\r\n          role=\"button\"\r\n          aria-pressed={false}\r\n          tabIndex={0}\r\n          aria-hidden\r\n          className={styles.dropDownTriggerer}\r\n          ref={triggerRef}\r\n        >\r\n          <span>{symbolCurrency}</span>{\" \"}\r\n          <img src={this.setArrowIcon()} alt=\"DropDown Arrow\" />\r\n        </div>\r\n        {showMenu && this.renderMenu()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrencyDropDown;\r\n","import React from \"react\";\r\n\r\nclass DetectClickOutside extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n    this.triggerRef = React.createRef();\r\n    this.nodeRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.handleClickOutside, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.handleClickOutside, true);\r\n  }\r\n\r\n  handleClickOutside = (e) => {\r\n    if (this.triggerRef.current?.contains(e.target)) {\r\n      this.setState({ showMenu: !this.state.showMenu });\r\n      return;\r\n    }\r\n\r\n    if (!this.nodeRef.current?.contains(e.target)) {\r\n      this.setState({ showMenu: false });\r\n    }\r\n  };\r\n\r\n  setShowMenu = () => {\r\n    this.setState({ showMenu: !this.state.showMenu });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.render({\r\n          showMenu: this.state.showMenu,\r\n          setShowMenu: this.setShowMenu,\r\n          triggerRef: this.triggerRef,\r\n          nodeRef: this.nodeRef,\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetectClickOutside;\r\n","export default __webpack_public_path__ + \"static/media/EmptyCart.d6007204.svg\";","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./Button.module.css\";\r\nclass Button extends React.PureComponent {\r\n  btnClasses = classnames(styles.btn, {\r\n    [styles.btnPrimary]: this.props.variant === \"primary\",\r\n    [styles.btnSecondary]: this.props.variant === \"secondary\",\r\n    [styles.btnMini]: this.props.size === \"mini\",\r\n    [styles.btnSmall]: this.props.size === \"small\",\r\n    [styles.btnMedium]: this.props.size === \"medium\",\r\n    [styles.btnLarge]: this.props.size === \"large\",\r\n    [styles.btnFullWidth]: this.props.size === \"fullWidth\",\r\n    [styles.miniBtnSelected]:\r\n      this.props.size === \"mini\" && this.props.isSelected,\r\n    [styles.mediumBtnSelected]:\r\n      this.props.size === \"medium\" && this.props.isSelected,\r\n  });\r\n  renderButtonContent = () => {\r\n    const { size, isIcon, children } = this.props;\r\n    const iconClasses = classnames({\r\n      [styles.iconMini]: size === \"mini\",\r\n      [styles.iconSmall]: size === \"small\",\r\n    });\r\n    return isIcon ? (\r\n      <img src={children} alt=\"\" className={iconClasses} />\r\n    ) : (\r\n      children\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { id, stylesProps, buttonType, onClick } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        type={buttonType}\r\n        className={this.btnClasses}\r\n        id={id}\r\n        style={stylesProps}\r\n      >\r\n        {this.renderButtonContent()}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styles from \"./Circle.module.css\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Circle extends React.PureComponent {\r\n  circleClasses = classnames(styles.circle, {\r\n    [styles.swatchMini]: this.props.size === \"mini\",\r\n    [styles.swatchMedium]: this.props.size === \"medium\",\r\n  });\r\n  render() {\r\n    const { color, children } = this.props;\r\n    return (\r\n      <span\r\n        className={this.circleClasses}\r\n        style={{ backgroundColor: `${color}` }}\r\n      >\r\n        {children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Circle;\r\n","export default __webpack_public_path__ + \"static/media/Plus.89fe7bf6.svg\";","export default __webpack_public_path__ + \"static/media/Minus.9b3d120f.svg\";","export default __webpack_public_path__ + \"static/media/ChevronRight.af156e3e.svg\";","export default __webpack_public_path__ + \"static/media/ChevronLeft.b726ff4c.svg\";","import React from \"react\";\r\nimport styles from \"./CartProductActions.module.css\";\r\nimport Button from \"../../../shared/Button/Button\";\r\nimport classnames from \"classnames\";\r\nimport Plus from \"../../../../Icons/Plus.svg\";\r\nimport Minus from \"../../../../Icons/Minus.svg\";\r\nimport ChevronRight from \"../../../../Icons/ChevronRight.svg\";\r\nimport ChevronLeft from \"../../../../Icons/ChevronLeft.svg\";\r\n\r\nclass CartProductActions extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      galleryCount: 0,\r\n    };\r\n  }\r\n\r\n  productImageClasses = classnames(styles.productImage, {\r\n    [styles.ImageCartPage]: this.props.size === \"medium\",\r\n    [styles.ImageCartMini]: this.props.size === \"mini\",\r\n  });\r\n\r\n  gallerySwitcher = (e) => {\r\n    const galleryLength = this.props.gallery.length - 1;\r\n\r\n    const rightArrowSwitch = () => {\r\n      if (this.state.galleryCount === galleryLength) {\r\n        this.setState({ galleryCount: 0 });\r\n      } else {\r\n        this.setState((prev) => ({ galleryCount: prev.galleryCount + 1 }));\r\n      }\r\n    };\r\n\r\n    const leftArrowSwitch = () => {\r\n      if (this.state.galleryCount === 0) {\r\n        this.setState({ galleryCount: galleryLength });\r\n      } else {\r\n        this.setState((prev) => ({ galleryCount: prev.galleryCount - 1 }));\r\n      }\r\n    };\r\n\r\n    switch (e.target.id) {\r\n      case \"rightArrow\":\r\n        return rightArrowSwitch();\r\n\r\n      case \"leftArrow\":\r\n        return leftArrowSwitch();\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  render() {\r\n    const { size, id, gallery, quantity, name } = this.props;\r\n\r\n    return (\r\n      <div className={styles.productCount}>\r\n        <div className={styles.AddOrRemoveQuantity}>\r\n          <Button\r\n            buttonType=\"button\"\r\n            variant=\"primary\"\r\n            isIcon\r\n            size={this.props.quantityBtnSize}\r\n            onClick={() => this.props.handleAddProductQuantity(id)}\r\n          >\r\n            {Plus}\r\n          </Button>\r\n          <p>{quantity}</p>\r\n          <Button\r\n            buttonType=\"button\"\r\n            variant=\"primary\"\r\n            isIcon\r\n            size={this.props.quantityBtnSize}\r\n            onClick={() =>\r\n              this.props.handleRemoveProductQuantity({ id, quantity })\r\n            }\r\n          >\r\n            {Minus}\r\n          </Button>\r\n        </div>\r\n        <div className={styles.productImageContainer}>\r\n          {size === \"medium\" && (\r\n            <div\r\n              className={styles.productImageSwitcher}\r\n              onClick={this.gallerySwitcher}\r\n            >\r\n              <img src={ChevronLeft} alt=\"Left Arrow\" id=\"leftArrow\" />\r\n              <img src={ChevronRight} alt=\"Right Arrow\" id=\"rightArrow\" />\r\n            </div>\r\n          )}\r\n\r\n          <img\r\n            src={gallery[this.state.galleryCount]}\r\n            alt={name}\r\n            className={this.productImageClasses}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartProductActions;\r\n","import React from \"react\";\r\nimport Button from \"../../shared/Button/Button\";\r\nimport Circle from \"../../shared/Circle/Circle\";\r\nimport styles from \"./CartProduct.module.css\";\r\nimport classnames from \"classnames\";\r\nimport { getPriceWithCurrentCurrency } from \"../../shared/utils/getPriceWithCurrentCurrency\";\r\nimport CartProductActions from \"./CartProductActions/CartProductActions\";\r\nclass CartProduct extends React.PureComponent {\r\n  cartProductClassNames = () => {\r\n    const size = this.props.size;\r\n    const productBrandClasses = classnames({\r\n      [styles.brandCartPage]: size === \"medium\",\r\n      [styles.brandCartMini]: size === \"mini\",\r\n    });\r\n\r\n    const productNameClasses = classnames({\r\n      [styles.nameCartPage]: size === \"medium\",\r\n      [styles.nameCartMini]: size === \"mini\",\r\n    });\r\n\r\n    const productPriceClasses = classnames({\r\n      [styles.priceCartPage]: size === \"medium\",\r\n      [styles.priceCartMini]: size === \"mini\",\r\n    });\r\n\r\n    const attributeNameClasses = classnames({\r\n      [styles.attributeNameCartPage]: size === \"medium\",\r\n      [styles.attributeNameMini]: size === \"mini\",\r\n    });\r\n    return {\r\n      productBrandClasses,\r\n      productNameClasses,\r\n      productPriceClasses,\r\n      attributeNameClasses,\r\n    };\r\n  };\r\n\r\n  renderAttributes = (attributes, attributeNameClasses) => {\r\n    return attributes[0]\r\n      ? attributes.map((attribute, index) => {\r\n          return (\r\n            <div\r\n              key={`${attribute.attributeId}${index}`}\r\n              className={styles.attribute}\r\n            >\r\n              <p\r\n                className={attributeNameClasses}\r\n              >{`${attribute.attributeName}:`}</p>\r\n              <div className={styles.item}>\r\n                {attribute.attributeType === \"swatch\" ? (\r\n                  <Circle\r\n                    color={attribute.selectedItem.value}\r\n                    size={this.props.size}\r\n                  />\r\n                ) : (\r\n                  <Button\r\n                    buttonType=\"button\"\r\n                    variant=\"primary\"\r\n                    isIcon={false}\r\n                    size={this.props.size}\r\n                    isSelected={true}\r\n                    stylesProps={{\r\n                      pointerEvents: \"none\",\r\n                    }}\r\n                  >\r\n                    {attribute.selectedItem.value}\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      : null;\r\n  };\r\n  render() {\r\n    const {\r\n      product: { brand, name, prices, id },\r\n      currency: { currentCurrency, symbolCurrency },\r\n    } = this.props;\r\n\r\n    const {\r\n      productBrandClasses,\r\n      productNameClasses,\r\n      productPriceClasses,\r\n      attributeNameClasses,\r\n    } = this.cartProductClassNames();\r\n\r\n    return (\r\n      <div className={styles.product}>\r\n        <div className={styles.productInfo}>\r\n          <div>\r\n            <h1 className={productBrandClasses}>{brand}</h1>\r\n            <h2 className={productNameClasses}>{name}</h2>\r\n          </div>\r\n          <p className={productPriceClasses}>\r\n            {`${symbolCurrency}${getPriceWithCurrentCurrency(\r\n              prices,\r\n              currentCurrency\r\n            )}`}\r\n          </p>\r\n          <div className={styles.productAttributes}>\r\n            {this.renderAttributes(\r\n              this.props.product.attributes,\r\n              attributeNameClasses\r\n            )}\r\n          </div>\r\n        </div>\r\n        <CartProductActions\r\n          handleRemoveProductQuantity={this.props.handleRemoveProductQuantity}\r\n          handleAddProductQuantity={this.props.handleAddProductQuantity}\r\n          quantityBtnSize={this.props.quantityBtnSize}\r\n          name={this.props.product.name}\r\n          size={this.props.size}\r\n          quantity={this.props.product.quantity}\r\n          gallery={this.props.product.gallery}\r\n          id={id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartProduct;\r\n","export const getTotalProductsPriceAmount = (cartProducts, currentCurrency) => {\r\n  const eachProductTotal = cartProducts.map((product) => {\r\n    return (\r\n      product.prices.filter((price) => price.currency === currentCurrency)[0]\r\n        .amount * product.quantity\r\n    );\r\n  });\r\n\r\n  const allProductsTotal = eachProductTotal.reduce((acc, productTotal) => {\r\n    return acc + productTotal;\r\n  }, 0);\r\n  return allProductsTotal.toFixed(2);\r\n};\r\n","export const getTotalProductsQuantity = (products) => {\r\n  return products.reduce((acc, curr) => {\r\n    return curr.quantity + acc;\r\n  }, 0);\r\n};\r\n","import React from \"react\";\r\nimport EmptyCart from \"../../../Icons/EmptyCart.svg\";\r\nimport styles from \"./CartOverlay.module.css\";\r\nimport CartProduct from \"../CartProduct/CartProduct\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../shared/Button/Button\";\r\nimport Circle from \"../../shared/Circle/Circle\";\r\nimport { getTotalProductsPriceAmount } from \"../../shared/utils/getTotalProductsPriceAmount\";\r\nimport { getTotalProductsQuantity } from \"./utils/getTotalProductsQuantity\";\r\nclass CartOverlay extends React.PureComponent {\r\n  componentDidUpdate() {\r\n    this.props.detect.showMenu\r\n      ? (document.body.style.overflow = \"hidden\")\r\n      : (document.body.style.overflow = \"auto\");\r\n  }\r\n\r\n  renderMenuProducts = () => {\r\n    return this.props.products[0]\r\n      ? this.props.products.map((product, index) => {\r\n          return (\r\n            <div key={`${product.id}${index}`}>\r\n              <div className={styles.divider}></div>\r\n              <CartProduct\r\n                product={product}\r\n                currency={this.props.currency}\r\n                size=\"mini\"\r\n                quantityBtnSize=\"mini\"\r\n                handleAddProductQuantity={this.props.handleAddProductQuantity}\r\n                handleRemoveProductQuantity={\r\n                  this.props.handleRemoveProductQuantity\r\n                }\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      : null;\r\n  };\r\n\r\n  renderMenu = () => {\r\n    const {\r\n      currency,\r\n      products,\r\n      detect: { nodeRef, showMenu, setShowMenu },\r\n    } = this.props;\r\n\r\n    return (\r\n      showMenu && (\r\n        <>\r\n          <div className={styles.layer}></div>\r\n          <div role=\"menu\" className={styles.dropDownMenu} ref={nodeRef}>\r\n            <div className={styles.cartOverlayHeader}>\r\n              <p>\r\n                My Bag, <span>{getTotalProductsQuantity(products)} items</span>\r\n              </p>\r\n            </div>\r\n            <div className={styles.cartOverlayProducts}>\r\n              {this.renderMenuProducts()}\r\n            </div>\r\n            <div className={styles.cartOverlayTotalPrice}>\r\n              <p>Total</p>\r\n              <p>{`${currency.symbolCurrency}${getTotalProductsPriceAmount(\r\n                products,\r\n                currency.currentCurrency\r\n              )}`}</p>\r\n            </div>\r\n\r\n            <div className={styles.cartOverlayButtons}>\r\n              <Link to=\"/cart\" onClick={() => setShowMenu(false)}>\r\n                <Button\r\n                  buttonType=\"button\"\r\n                  variant=\"primary\"\r\n                  isIcon={false}\r\n                  size=\"large\"\r\n                >\r\n                  VIEW BAG\r\n                </Button>\r\n              </Link>\r\n\r\n              <Button\r\n                buttonType=\"button\"\r\n                variant=\"secondary\"\r\n                isIcon={false}\r\n                size=\"large\"\r\n              >\r\n                CHECK OUT\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.dropDownContainer}>\r\n        <div\r\n          role=\"button\"\r\n          aria-pressed={false}\r\n          tabIndex={0}\r\n          aria-hidden\r\n          className={styles.dropDownTriggerer}\r\n          ref={this.props.detect.triggerRef}\r\n        >\r\n          <img src={EmptyCart} alt=\"empty cart logo\" />\r\n          <div className={styles.totalQuantityBadge}>\r\n            <Circle color=\"#1D1F22\" size=\"mini\">\r\n              {getTotalProductsQuantity(this.props.products)}\r\n            </Circle>\r\n          </div>\r\n        </div>\r\n        {this.renderMenu()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartOverlay;\r\n","import React, { Component } from \"react\";\r\nimport { Query } from \"@apollo/client/react/components\";\r\nimport { getCategoriesNames } from \"../../../GraphQL/queries\";\r\n\r\nclass CategoriesNames extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Query query={getCategoriesNames}>\r\n          {({ loading, data }) => {\r\n            if (loading) return \"...loading\";\r\n            return data.categories.map((category) => {\r\n              return this.props.children(category.name);\r\n            });\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoriesNames;\r\n","import React from \"react\";\r\nimport Logo from \"../../Icons/Logo.svg\";\r\nimport styles from \"./HeaderBar.module.css\";\r\nimport CurrencyDropDown from \"../CurrencyDropDown/CurrencyDropDown\";\r\nimport DetectClickOutside from \"../shared/DetectClickOutside/DetectClickOutside\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CartOverlay from \"../cart/CartOverlay/CartOverlay\";\r\nimport CategoriesNames from \"../shared/CategoriesNames/CategoriesNames\";\r\n\r\nclass HeaderBar extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className={styles.headerBarWrapper}>\r\n        <div className={styles.navCategories}>\r\n          <NavLink to=\"/all\" activeClassName={styles.navLinks}>\r\n            ALL\r\n          </NavLink>\r\n          <CategoriesNames>\r\n            {(categoryName) => {\r\n              return (\r\n                <NavLink\r\n                  key={categoryName}\r\n                  to={`/${categoryName}`}\r\n                  activeClassName={styles.navLinks}\r\n                >\r\n                  {`${categoryName}`.toUpperCase()}\r\n                </NavLink>\r\n              );\r\n            }}\r\n          </CategoriesNames>\r\n        </div>\r\n        <div className={styles.logo}>\r\n          <img src={Logo} alt=\"Arrow with green background\" />\r\n        </div>\r\n        <div className={styles.cartContainer}>\r\n          <DetectClickOutside\r\n            render={(state) => (\r\n              <CurrencyDropDown\r\n                currency={this.props.currency}\r\n                onCurrencyClick={this.props.onCurrencyClick}\r\n                detect={state}\r\n              />\r\n            )}\r\n          />\r\n          <div className={styles.cart}>\r\n            <DetectClickOutside\r\n              render={(state) => (\r\n                <CartOverlay\r\n                  detect={state}\r\n                  products={this.props.products}\r\n                  currency={this.props.currency}\r\n                  handleAddProductQuantity={this.props.handleAddProductQuantity}\r\n                  handleRemoveProductQuantity={\r\n                    this.props.handleRemoveProductQuantity\r\n                  }\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeaderBar;\r\n","import React from \"react\";\r\nimport { Query } from \"@apollo/client/react/components\";\r\nimport { getProduct } from \"../../GraphQL/queries\";\r\nimport Button from \"../shared/Button/Button\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./ProductPage.module.css\";\r\nimport Circle from \"../shared/Circle/Circle\";\r\nimport { getPriceWithCurrentCurrency } from \"../shared/utils/getPriceWithCurrentCurrency\";\r\nimport { sanitize } from \"dompurify\";\r\nclass ProductPage extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedImagePreview: \"\",\r\n      productCart: {\r\n        name: \"\",\r\n        brand: \"\",\r\n        id: \"\",\r\n        gallery: \"\",\r\n        prices: [],\r\n        quantity: 1,\r\n        attributes: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  handleAttributesItems = ({\r\n    selectedItem,\r\n    attributeId,\r\n    attributeType,\r\n    attributeName,\r\n  }) => {\r\n    const rest = this.state.productCart.attributes.filter((attribute) => {\r\n      return (\r\n        attribute.attributeId !== attributeId && attribute.attributeId !== \"\"\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      productCart: {\r\n        ...this.state.productCart,\r\n        attributes: [\r\n          ...rest,\r\n          { attributeId, attributeType, attributeName, selectedItem },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n\r\n  handleAddingToCard = ({\r\n    name,\r\n    brand,\r\n    gallery,\r\n    prices,\r\n    attributes,\r\n    inStock,\r\n  }) => {\r\n    //validations\r\n\r\n    //make each product id unique and personalized by using attributes preferences\r\n    const securedProductId = [...this.state.productCart.attributes]\r\n      .sort((a, b) =>\r\n        a.attributeId > b.attributeId\r\n          ? 1\r\n          : b.attributeId > a.attributeId\r\n          ? -1\r\n          : 0\r\n      )\r\n      .reduce(\r\n        (acc, curr) => acc + curr.selectedItem.id,\r\n        `${this.props.match.params.productId}`\r\n      );\r\n    //check if the product is not already in the cart\r\n    const ProductIsAlreadyInCart = this.props.globalCart.find((product) => {\r\n      return product.id === securedProductId;\r\n    });\r\n\r\n    //check if user selected the attributes\r\n    if (\r\n      attributes.length !== this.state.productCart.attributes.length &&\r\n      attributes.length > 0\r\n    ) {\r\n      alert(\"Please Select The Preferred item Attributes For Your Product\");\r\n    } else if (ProductIsAlreadyInCart !== undefined) {\r\n      alert(\"This Product Is Already In The Cart\");\r\n    } else if (!inStock) {\r\n      alert(\"Unfortunately, This Product Is NOT in Stock\");\r\n    } else {\r\n      this.setState(\r\n        {\r\n          productCart: {\r\n            ...this.state.productCart,\r\n            name: name,\r\n            brand: brand,\r\n            gallery: gallery,\r\n            prices: prices,\r\n            id: securedProductId,\r\n          },\r\n        },\r\n        () => {\r\n          this.props.setToGlobalCart(this.state.productCart);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  renderProductImages = (gallery) => {\r\n    return gallery.map((image) => {\r\n      return (\r\n        <img\r\n          src={image}\r\n          key={image}\r\n          className={styles.smallImage}\r\n          alt=\"\"\r\n          onClick={() => this.setState({ selectedImagePreview: image })}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderOutOfStock = (inStock) => {\r\n    return (\r\n      !inStock && (\r\n        <div className={styles.notInStock}>\r\n          <span>OUT OF STOCK</span>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  isImagePreviewSelected = (gallery) => {\r\n    return this.state.selectedImagePreview === \"\"\r\n      ? gallery[0]\r\n      : this.state.selectedImagePreview;\r\n  };\r\n\r\n  isTypeSwatch = (attribute, item) => {\r\n    return attribute.type === \"swatch\" ? (\r\n      <Circle color={item.value} size=\"medium\" />\r\n    ) : (\r\n      <Button\r\n        buttonType=\"button\"\r\n        variant=\"primary\"\r\n        isIcon={false}\r\n        size=\"medium\"\r\n        id={`${attribute.id}${item.id}`}\r\n        stylesProps={{\r\n          pointerEvents: \"none\",\r\n        }}\r\n      >\r\n        {item.value}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  renderAttributeItems = (attribute) => {\r\n    return attribute.items.map((item) => {\r\n      return (\r\n        <div key={item.id}>\r\n          <input\r\n            type=\"radio\"\r\n            name={attribute.id}\r\n            id={`${attribute.id}${item.id}`}\r\n            value={item.value}\r\n            onChange={() =>\r\n              this.handleAttributesItems({\r\n                selectedItem: item,\r\n                attributeId: attribute.id,\r\n                attributeType: attribute.type,\r\n                attributeName: attribute.name,\r\n              })\r\n            }\r\n          />\r\n          <label className={styles.item} htmlFor={`${attribute.id}${item.id}`}>\r\n            {this.isTypeSwatch(attribute, item)}\r\n          </label>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  renderProductAttributes = (attributes) => {\r\n    return attributes[0]\r\n      ? attributes.map((attribute) => {\r\n          return (\r\n            <form\r\n              id={attribute.id}\r\n              key={attribute.id}\r\n              className={styles.attributesContainer}\r\n            >\r\n              <div className={styles.attribute}>\r\n                <p>{`${attribute.name}:`}</p>\r\n                <div className={styles.itemsContainer}>\r\n                  {this.renderAttributeItems(attribute)}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          );\r\n        })\r\n      : null;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currency: { currentCurrency, symbolCurrency },\r\n      match: {\r\n        params: { productId },\r\n      },\r\n    } = this.props;\r\n    return (\r\n      <Query query={getProduct} variables={{ id: productId }}>\r\n        {({ loading, data, error }) => {\r\n          if (loading) return \"loading..\";\r\n          if (error || !data.product) return <h1>Product does not exist!</h1>;\r\n          const {\r\n            name,\r\n            gallery,\r\n            brand,\r\n            attributes,\r\n            description,\r\n            prices,\r\n            inStock,\r\n          } = data.product;\r\n          return (\r\n            <div className={styles.pageContainer}>\r\n              <div className={styles.galleryContainer}>\r\n                <div className={styles.previewImages}>\r\n                  {this.renderProductImages(gallery)}\r\n                </div>\r\n                <div className={styles.largeImage}>\r\n                  {this.renderOutOfStock(inStock)}\r\n                  <img\r\n                    src={this.isImagePreviewSelected(gallery)}\r\n                    className={classnames({\r\n                      [styles.notInStockBox]: !inStock,\r\n                    })}\r\n                    alt={name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={styles.productInfo}>\r\n                <h1>{brand}</h1>\r\n                <h2>{name}</h2>\r\n                {this.renderProductAttributes(attributes)}\r\n                <div className={styles.price}>\r\n                  <p className={styles.priceHeader}>PRICES:</p>\r\n\r\n                  <p className={styles.priceAmount}>\r\n                    {`${symbolCurrency}${getPriceWithCurrentCurrency(\r\n                      prices,\r\n                      currentCurrency\r\n                    )}`}\r\n                  </p>\r\n                </div>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.handleAddingToCard({\r\n                      name,\r\n                      brand,\r\n                      gallery,\r\n                      prices,\r\n                      attributes,\r\n                      inStock,\r\n                    });\r\n                  }}\r\n                  buttonType=\"submit\"\r\n                  variant=\"secondary\"\r\n                  isIcon={false}\r\n                  size=\"fullWidth\"\r\n                >\r\n                  ADD TO CART\r\n                </Button>\r\n                <div\r\n                  className={styles.description}\r\n                  dangerouslySetInnerHTML={{ __html: sanitize(description) }}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductPage;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./CartPage.module.css\";\r\nimport CartProduct from \"../CartProduct/CartProduct\";\r\nexport class CartPage extends Component {\r\n  renderProducts = () => {\r\n    return this.props.products[0]\r\n      ? this.props.products.map((product, index) => {\r\n          return (\r\n            <div key={`${product.id}${index}`}>\r\n              <div className={styles.divider}></div>\r\n              <CartProduct\r\n                product={product}\r\n                currency={this.props.currency}\r\n                size=\"medium\"\r\n                quantityBtnSize=\"small\"\r\n                handleAddProductQuantity={this.props.handleAddProductQuantity}\r\n                handleRemoveProductQuantity={\r\n                  this.props.handleRemoveProductQuantity\r\n                }\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      : null;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={styles.cartPageWrapper}>\r\n        <div className={styles.cartPageHeader}>\r\n          <h1>CART</h1>\r\n        </div>\r\n        {this.renderProducts()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartPage;\r\n","import React, { Component } from \"react\";\r\nimport ProductList from \"./components/ProductList/ProductList\";\r\nimport HeaderBar from \"./components/HeaderBar/HeaderBar\";\r\nimport { getCurrencySymbol } from \"./components/shared/utils/getCurrencySymbol\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport ProductPage from \"./components/ProductPage/ProductPage\";\r\nimport CartPage from \"./components/cart/CartPage/CartPage\";\r\nimport CategoriesNames from \"./components/shared/CategoriesNames/CategoriesNames\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currency: {\r\n        currentCurrency: \"USD\",\r\n        symbolCurrency: \"$\",\r\n      },\r\n      cart: [],\r\n    };\r\n  }\r\n  setCurrency = (clickedCurrency) => {\r\n    this.setState({\r\n      currency: {\r\n        currentCurrency: clickedCurrency,\r\n        symbolCurrency: getCurrencySymbol(clickedCurrency),\r\n      },\r\n    });\r\n  };\r\n\r\n  setCart = (addedToCart) => {\r\n    this.setState({\r\n      cart: [...this.state.cart, addedToCart],\r\n    });\r\n  };\r\n\r\n  handleAddProductQuantity = (productId) => {\r\n    const addedProduct = this.state.cart.map((product) => {\r\n      if (product.id === productId) {\r\n        return { ...product, quantity: product.quantity + 1 };\r\n      }\r\n      return product;\r\n    });\r\n\r\n    this.setState({\r\n      cart: addedProduct,\r\n    });\r\n  };\r\n\r\n  handleRemoveProductQuantity = ({ id, quantity }) => {\r\n    const decreasedProduct = this.state.cart.map((product) => {\r\n      if (product.id === id) {\r\n        return { ...product, quantity: product.quantity - 1 };\r\n      }\r\n      return product;\r\n    });\r\n\r\n    const removedProduct = this.state.cart.filter(\r\n      (product) => product.id !== id\r\n    );\r\n\r\n    this.setState({\r\n      cart: quantity === 1 ? removedProduct : decreasedProduct,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <HeaderBar\r\n            products={this.state.cart}\r\n            currency={this.state.currency}\r\n            handleAddProductQuantity={this.handleAddProductQuantity}\r\n            handleRemoveProductQuantity={this.handleRemoveProductQuantity}\r\n            onCurrencyClick={this.setCurrency}\r\n          />\r\n        </header>\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Redirect to=\"/all\" />\r\n            </Route>\r\n            <Route\r\n              path={`/all`}\r\n              exact\r\n              component={() => (\r\n                <ProductList\r\n                  categoryName=\"\"\r\n                  currency={this.state.currency}\r\n                  setCart={this.setCart}\r\n                  cart={this.state.cart}\r\n                />\r\n              )}\r\n            />\r\n            <CategoriesNames>\r\n              {(categoryName) => {\r\n                return (\r\n                  <Route\r\n                    key={categoryName}\r\n                    path={`/${categoryName}`}\r\n                    exact\r\n                    component={() => (\r\n                      <ProductList\r\n                        categoryName={categoryName}\r\n                        currency={this.state.currency}\r\n                        setCart={this.setCart}\r\n                        cart={this.state.cart}\r\n                      />\r\n                    )}\r\n                  />\r\n                );\r\n              }}\r\n            </CategoriesNames>\r\n          </Switch>\r\n          <CategoriesNames>\r\n            {(categoryName) => {\r\n              return (\r\n                <Route\r\n                  key={categoryName}\r\n                  path={`/${categoryName}/:productId`}\r\n                  exact\r\n                  component={({ match }) => (\r\n                    <ProductPage\r\n                      match={match}\r\n                      currency={this.state.currency}\r\n                      setToGlobalCart={this.setCart}\r\n                      globalCart={this.state.cart}\r\n                    />\r\n                  )}\r\n                />\r\n              );\r\n            }}\r\n          </CategoriesNames>\r\n          <Route\r\n            path={\"/cart\"}\r\n            component={() => (\r\n              <CartPage\r\n                products={this.state.cart}\r\n                currency={this.state.currency}\r\n                handleAddProductQuantity={this.handleAddProductQuantity}\r\n                handleRemoveProductQuantity={this.handleRemoveProductQuantity}\r\n              />\r\n            )}\r\n          />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export function getCurrencySymbol(currency) {\r\n  return currency === \"GBP\"\r\n    ? \"£\"\r\n    : currency === \"JPY\"\r\n    ? \"¥\"\r\n    : currency === \"RUB\"\r\n    ? \"₽\"\r\n    : currency === \"AUD\"\r\n    ? \"A$\"\r\n    : \"$\";\r\n}\r\n","import { ApolloClient, InMemoryCache, HttpLink, from } from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\r\n  if (graphqlErrors) {\r\n    graphqlErrors.forEach(({ message, locations, path }) => {\r\n      console.log(\r\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n      );\r\n    });\r\n  }\r\n  if (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nconst link = from([\r\n  errorLink,\r\n  new HttpLink({ uri: \"https://rocky-garden-19128.herokuapp.com/\" }),\r\n]);\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: link,\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport client from \"./GraphQL/client\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}